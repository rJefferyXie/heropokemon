// Next
import type { NextPage } from 'next';
import Head from 'next/head';

// React and Styling
import React, { useEffect, useState } from 'react';
import styles from '../styles/Home.module.scss';

// Components
import Regions from '../components/regions';
import Loading from '../components/loading';

// Constants
import RegionList from '../constants/RegionList';

// Database
import { db } from '../server'
import { doc, getDoc } from 'firebase/firestore'; 

const Home: NextPage = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [unlockedRegions, setUnlockedRegions] = useState<string[]>(["kanto"]);

  useEffect(() => {
    const downloadPokedexes = async () => {
      for (const region of RegionList) {
        const regionPokedex = localStorage.getItem(region);
        if (regionPokedex) continue;

        console.log("downloading pokedex for " + region);

        const ref = doc(db, "regions", region);
        const snapshot = await getDoc(ref);
        if (snapshot.exists()) {
          const snapData = snapshot.data().pokedex;
          localStorage.setItem(region, JSON.stringify(snapData));
        }
      }

      setIsLoading(false);
    }

    const setDefaults = () => {
      const artwork = localStorage.getItem("artwork");
      if (!artwork) {
        localStorage.setItem("artwork", "official");
      }

      const discoveredPokemon = localStorage.getItem("discoveredPokemon");
      if (!discoveredPokemon) {
        localStorage.setItem("discoveredPokemon", JSON.stringify([
          "bulbasaur", "charmander", "squirtle",
          "chikorita", "cyndaquil", "totodile",
          "treecko", "torchic", "mudkip",
          "turtwig", "chimchar", "piplup",
          "snivy", "tepig", "oshawott",
          "chespin", "fennekin", "froakie",
          "rowlet", "litten", "popplio"
        ]));
      }

      const regionsUnlocked = localStorage.getItem("unlockedRegions");
      if (!regionsUnlocked) {
        localStorage.setItem("unlockedRegions", JSON.stringify(["kanto"]));
      } else {
        setUnlockedRegions(JSON.parse(regionsUnlocked));
      }
    }
    
    setDefaults();
    downloadPokedexes();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>HeroPokemon - A Pokemon-Based Idle Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isLoading && <Loading></Loading>}

      <Regions unlockedRegions={unlockedRegions}></Regions>
    </div>
  )
}

export default Home;
