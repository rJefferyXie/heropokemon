// Next
import type { NextPage } from 'next';
import Head from 'next/head';

// React and Styling
import React, { useEffect, useState } from 'react';
import styles from '../styles/Home.module.scss';

// Components
import Hero from '../components/hero';
import Regions from '../components/regions';
import Loading from '../components/loading';

// Constants
import RegionList from '../constants/RegionList';

// Database
import { db } from '../server'
import { doc, getDoc } from 'firebase/firestore'; 

const Home: NextPage = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [isFirstTime, setIsFirstTime] = useState(true);
  const [artwork, setArtwork] = useState("official");
  const [unlockedRegions, setUnlockedRegions] = useState<string[]>(["kanto"]);
  const [discoveredPokemon, setDiscoveredPokemon] = useState<string[]>([
    "bulbasaur", "charmander", "squirtle",
    "chikorita", "cyndaquil", "totodile",
    "treecko", "torchic", "mudkip",
    "turtwig", "chimchar", "piplup",
    "snivy", "tepig", "oshawott",
    "chespin", "fennekin", "froakie",
    "rowlet", "litten", "popplio"
  ]);

  useEffect(() => {
    const downloadPokedexes = async () => {
      for (const region of RegionList) {
        const regionPokedex = localStorage.getItem(region);
        if (regionPokedex) continue;

        console.log("downloading pokedex for " + region);

        const ref = doc(db, "regions", region);
        const snapshot = await getDoc(ref);
        if (snapshot.exists()) {
          const snapData = snapshot.data().pokedex;
          localStorage.setItem(region, JSON.stringify(snapData));
        }
      }

      setIsLoading(false);
    }

    const setDefaults = () => {
      const artwork = localStorage.getItem("artwork");
      if (!artwork) {
        localStorage.setItem("artwork", "official");
      } else {
        setArtwork(artwork);
      }

      const regionsUnlocked = localStorage.getItem("unlockedRegions");
      if (!regionsUnlocked) {
        localStorage.setItem("regionsUnlocked", JSON.stringify(["kanto"]));
      } else {
        setUnlockedRegions(JSON.parse(regionsUnlocked));
      }

      const pokemonDiscovered = localStorage.getItem("discoveredPokemon");
      if (!pokemonDiscovered) {
        localStorage.setItem("pokemonDiscovered", JSON.stringify([
            "bulbasaur", "charmander", "squirtle",
            "chikorita", "cyndaquil", "totodile",
            "treecko", "torchic", "mudkip",
            "turtwig", "chimchar", "piplup",
            "snivy", "tepig", "oshawott",
            "chespin", "fennekin", "froakie",
            "rowlet", "litten", "popplio"
          ])
        );
      }
    }
    
    setDefaults();
    downloadPokedexes();
  }, []);

  const proceed = () => {
    setIsFirstTime(false);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>HeroPokemon - A Pokemon-Based Idle Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isLoading && <Loading></Loading>}

      {(isFirstTime && !isLoading) && 
        <Hero 
          artwork={artwork} 
          proceed={proceed}
        >
        </Hero>}

      {!isFirstTime && 
        <Regions 
          artwork={artwork}
          unlockedRegions={unlockedRegions} 
          discoveredPokemon={discoveredPokemon} 
        >
        </Regions>}
    </div>
  )
}

export default Home;
